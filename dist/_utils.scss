////
/// Utility mixins provide common functionality for floats, show/hide, etc
/// @group Utilities
////

/// Adds a clearfix to the item via a psuedo element.
@mixin clearfix() {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

/// Used for overriding styles in right to left languages. Styles will be applied when html element is in right to left mode.
/// @example scss
///   .myClass { 
///     margin-left: 1rem;
///     @include rtl {
///       margin-left: 0;
///       margin-right: 1rem;
///     }
///   }
@mixin rtl() {
  html[dir="rtl"] & {
    @content;
  }
}

/// Floats an element to the left. In right-to-left documents, will automatically switch to float right.
@mixin left() {
  float: left;
  @include rtl {
    float: right; 
  }
}

/// Floats an element to the right. In right-to-left documents, will automatically switch to float left.
@mixin right() {
  float: right;
  @include rtl {
    float: left; 
  }
}

/// Hide an element visually, but leave it available to screen readers.
@mixin visually-hidden() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/// Hide an element visually, but allow it to be focused (useful for things like skip-to-content links).
@mixin visually-hidden-focusable() {
  &:active, &:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}
